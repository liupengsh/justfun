<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">
                        
	<context:component-scan base-package="com.justfun" />
	
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>

	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
		<property name="poolProperties">
			<bean class="org.apache.tomcat.jdbc.pool.PoolProperties">
				<property name="driverClassName">
					<value>${jdbc.driver}</value>
				</property>
				<property name="url">
					<value>${jdbc.url}</value>
				</property>
				<property name="username">
					<value>${jdbc.username}</value>
				</property>
				<property name="password">
					<value>${jdbc.password}</value>
				</property>
				<property name="maxActive">
					<value>${jdbc.maxActive}</value>
				</property>
				<property name="maxIdle">
					<value>${jdbc.maxIdle}</value>
				</property>
				<property name="maxWait">
					<value>${jdbc.maxWait}</value>
				</property>
				<property name="defaultAutoCommit">
					<value>${jdbc.defaultAutoCommit}</value>
				</property>
				<property name="initialSize">
					<value>${jdbc.initialSize}</value>
				</property>
				<property name="removeAbandoned">
					<value>${jdbc.removeAbandoned}</value>
				</property>
				<property name="removeAbandonedTimeout">
					<value>${jdbc.removeAbandonedTimeout}</value>
				</property>
				<property name="testOnBorrow">
					<value>${jdbc.testOnBorrow}</value>
				</property>
				<property name="testOnReturn">
					<value>${jdbc.testOnReturn}</value>
				</property>
				<property name="testWhileIdle">
					<value>${jdbc.testWhileIdle}</value>
				</property>
				<property name="validationQuery">
					<value>${jdbc.validationQuery}</value>
				</property>
				<property name="validationInterval">
					<value>${jdbc.validationInterval}</value>
				</property>
				<property name="minIdle">
					<value>${jdbc.minIdle}</value>
				</property>
				<property name="timeBetweenEvictionRunsMillis">
					<value>${jdbc.timeBetweenEvictionRunsMillis}</value>
				</property>
				<property name="minEvictableIdleTimeMillis">
					<value>${jdbc.minEvictableIdleTimeMillis}</value>
				</property>
			</bean>
		</property>
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mybatis/*.xml" />
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类；将创建MapperFactoryBean,之后自动装配 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.justfun.dao" />
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
    <import resource="classpath:spring-config-shiro.xml"/>
</beans>